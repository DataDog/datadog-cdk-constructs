{
  "Resources": {
    "HelloHandlerServiceRoleXXXXXXXX": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/HelloHandler/ServiceRole/Resource"
      }
    },
    "HelloHandlerXXXXXXXX": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersXXXXXXXXXXXXX"
          },
          "S3Key": "serverless/dd-cdk-construct-integration-test/dev/XXXXXXXXXXXXX-XXXX-XX-XXXXX:XX:XX.XXXX/dd-cdk-construct-integration-test.zip"
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersXXXXXXXXXXXXX"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersXXXXXXXXXXXXX"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "HelloHandlerServiceRoleXXXXXXXX",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DD_LAMBDA_HANDLER": "example-python.handler",
            "DD_TRACE_ENABLED": "true",
            "DD_MERGE_XRAY_TRACES": "false",
            "DD_LOGS_INJECTION": "true",
            "DD_SERVERLESS_LOGS_ENABLED": "true",
            "DD_CAPTURE_LAMBDA_PAYLOAD": "false",
            "DD_FLUSH_TO_LOG": "false",
            "DD_SITE": "datadoghq.com",
            "DD_API_KEY": "1234"
          }
        },
        "Handler": "datadog_lambda.handler.handler",
        "Layers": [
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Python37:XXX",
          "arn:aws:lambda:sa-east-1:464622532012:layer:Datadog-Extension:XXX"
        ],
        "Runtime": "python3.7",
        "Tags": [
          {
            "Key": "dd_cdk_construct",
            "Value": "vX.XX.X"
          }
        ]
      },
      "DependsOn": [
        "HelloHandlerServiceRoleXXXXXXXX"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/HelloHandler/Resource",
        "aws:asset:path": "asset.XXXXXXXXXXXXX",
        "aws:asset:original-path": "XXXXXXXXXXXXX",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "restLogGroupXXXXXXXX": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/restLogGroup/Resource"
      }
    },
    "resttestXXXXXXXX": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "rest-test"
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Resource"
      }
    },
    "resttestCloudWatchRoleXXXXXXXX": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/CloudWatchRole/Resource"
      }
    },
    "resttestAccountXXXXXXXX": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "resttestCloudWatchRoleXXXXXXXX",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "resttestXXXXXXXX"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Account"
      }
    },
    "resttestDeploymentXXXXXXXX": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "resttestXXXXXXXX"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "resttestproxyANYXXXXXXXX",
        "resttestproxyXXXXXXXX",
        "resttestANYXXXXXXXX"
      ],
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Deployment/Resource"
      }
    },
    "resttestDeploymentStageprodXXXXXXXX": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "resttestXXXXXXXX"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "restLogGroupXXXXXXXX",
              "Arn"
            ]
          },
          "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.httpMethod $context.resourcePath $context.protocol\" $context.status $context.responseLength $context.requestId"
        },
        "DeploymentId": {
          "Ref": "resttestDeploymentXXXXXXXX"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/DeploymentStage.prod/Resource"
      }
    },
    "resttestproxyXXXXXXXX": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "resttestXXXXXXXX",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "resttestXXXXXXXX"
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/{proxy+}/Resource"
      }
    },
    "resttestproxyANYApiPermissionlambdafunctionstackresttestXXXXXXXXANYXXXXXXXX": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandlerXXXXXXXX",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:601427279990:",
              {
                "Ref": "resttestXXXXXXXX"
              },
              "/",
              {
                "Ref": "resttestDeploymentStageprodXXXXXXXX"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/{proxy+}/ANY/ApiPermission.lambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX"
      }
    },
    "resttestproxyANYApiPermissionTestlambdafunctionstackresttestXXXXXXXXANYXXXXXXXX": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandlerXXXXXXXX",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:601427279990:",
              {
                "Ref": "resttestXXXXXXXX"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/{proxy+}/ANY/ApiPermission.Test.lambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX"
      }
    },
    "resttestproxyANYXXXXXXXX": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "resttestproxyXXXXXXXX"
        },
        "RestApiId": {
          "Ref": "resttestXXXXXXXX"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloHandlerXXXXXXXX",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/{proxy+}/ANY/Resource"
      }
    },
    "resttestANYApiPermissionlambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandlerXXXXXXXX",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:601427279990:",
              {
                "Ref": "resttestXXXXXXXX"
              },
              "/",
              {
                "Ref": "resttestDeploymentStageprodXXXXXXXX"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/ANY/ApiPermission.lambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX"
      }
    },
    "resttestANYApiPermissionTestlambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "HelloHandlerXXXXXXXX",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:sa-east-1:601427279990:",
              {
                "Ref": "resttestXXXXXXXX"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/ANY/ApiPermission.Test.lambdapythonfunctionstackresttestXXXXXXXXANYXXXXXXXX"
      }
    },
    "resttestANYXXXXXXXX": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "resttestXXXXXXXX",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "resttestXXXXXXXX"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:sa-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HelloHandlerXXXXXXXX",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/rest-test/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "vX:XXXXXX:XXXXXX"
      },
      "Metadata": {
        "aws:cdk:path": "lambda-python-function-stack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParametersXXXXXXXXXXXXX": {
      "Type": "String",
      "Description": "S3 bucket for asset XXXXXXXXXXXXX"
    },
    "AssetParametersXXXXXXXXXXXXX": {
      "Type": "String",
      "Description": "S3 key for asset XXXXXXXXXXXXX"
    },
    "AssetParametersXXXXXXXXXXXXX": {
      "Type": "String",
      "Description": "Artifact hash for asset XXXXXXXXXXXXX"
    }
  },
  "Outputs": {
    "resttestEndpointXXXXXXXX": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "resttestXXXXXXXX"
            },
            ".execute-api.sa-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "resttestDeploymentStageprodXXXXXXXX"
            },
            "/"
          ]
        ]
      }
    }
  }
}