{
 "Resources": {
  "HelloWorldFunctionServiceRole8E0BD458": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaGoOldLambdaApiStack/HelloWorldFunction/ServiceRole/Resource"
   }
  },
  "HelloWorldFunctionB2AB6E79": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n\t\t  exports.handler = async function(event) {\n\t\t\treturn {\n\t\t\t  statusCode: 200,\n\t\t\t  body: JSON.stringify('Hello World!'),\n\t\t\t};\n\t\t  };\n\t\t"
    },
    "Environment": {
     "Variables": {
      "DD_LAMBDA_HANDLER": "index.handler",
      "DD_TRACE_ENABLED": "true",
      "DD_SERVERLESS_APPSEC_ENABLED": "false",
      "DD_MERGE_XRAY_TRACES": "true",
      "DD_LOGS_INJECTION": "false",
      "DD_SERVERLESS_LOGS_ENABLED": "true",
      "DD_CAPTURE_LAMBDA_PAYLOAD": "false",
      "DD_LOG_LEVEL": "debug",
      "DD_FLUSH_TO_LOG": "false",
      "DD_SITE": "datadoghq.com",
      "DD_API_KEY": "1234",
      "DD_TAGS": "git.commit.sha:XXXXXXXX,git.repository_url:github.com/DataDog/datadog-cdk-constructs"
     }
    },
    "Handler": "/opt/nodejs/node_modules/datadog-lambda-js/handler.handler",
    "Layers": [
     "arn:aws:lambda:us-east-1:464622532012:layer:Datadog-Node20-x:113",
     "arn:aws:lambda:us-east-1:464622532012:layer:Datadog-Extension:62"
    ],
    "Role": {
     "Fn::GetAtt": [
      "HelloWorldFunctionServiceRole8E0BD458",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Tags": [
     {
      "Key": "dd_cdk_construct",
      "Value": "vX.XX.X"
     }
    ]
   },
   "DependsOn": [
    "HelloWorldFunctionServiceRole8E0BD458"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaGoOldLambdaApiStack/HelloWorldFunction/Resource"
   }
  },
  "HelloWorldFunctionFunctionUrl4150BDAD": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "HelloWorldFunctionB2AB6E79",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaGoOldLambdaApiStack/HelloWorldFunction/FunctionUrl/Resource"
   }
  },
  "HelloWorldFunctioninvokefunctionurlA2CB1A84": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloWorldFunctionB2AB6E79",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaGoOldLambdaApiStack/HelloWorldFunction/invoke-function-url"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "vX:XXXXXX:XXXXXX"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaGoOldLambdaApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "myFunctionUrlOutput": {
   "Value": {
    "Fn::GetAtt": [
     "HelloWorldFunctionFunctionUrl4150BDAD",
     "FunctionUrl"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}